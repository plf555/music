{"version":3,"sources":["webpack:///src/pages/InfoPage.vue","webpack:///./src/pages/InfoPage.vue?72c4","webpack:///./src/pages/InfoPage.vue"],"names":["InfoPage","data","consumerCount","songCount","singerCount","songListCount","consumer","songList","singer","consumerSex","columns","rows","性别","总数","options","color","options1","songStyle","风格","singerSex","country","国籍","created","this","getSinger","mounted","getConsumer","getSong","getSongList","methods","_this","Object","api","then","res","total","setSex","sex","val","count","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","value","err","return","_this2","_this3","getByCountry","_this4","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","getByStyle","style","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","includes","a","_this5","map","it","itt","location","array","console","log","sum","reduce","pre","cur","index","length","push","pages_InfoPage","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","margin-top","attrs","gutter","span","_v","_s","background-color","theme","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/10.fc2cb63aa95a11789f3e.js","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"20\" class=\"mgb20\" style=\"margin-top: 15px\">\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{consumerCount}}</div>\r\n                            <div>用户总数</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{songCount}}</div>\r\n                            <div>歌曲总数</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{singerCount}}</div>\r\n                            <div>歌手数量</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{songListCount}}</div>\r\n                            <div>歌单数量</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" class=\"mgb20\">\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">用户性别比例</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-pie :data=\"consumerSex\" :theme=\"options\"></ve-pie>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">歌曲类型分布</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-histogram :data=\"songStyle\"></ve-histogram>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" class=\"mgb20\">\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">歌手性别比例</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-pie :data=\"singerSex\"></ve-pie>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">歌手国籍分布</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-histogram :data=\"country\" :theme=\"options1\"></ve-histogram>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {getAllConsumerNoParams,alltAllSongNoParams,allSinger,getAllSongList} from '../api/index';\r\nexport default {\r\n    \r\n    data(){\r\n        return {\r\n            consumerCount: 0,       //用户总数\r\n            songCount: 0,           //歌曲总数\r\n            singerCount: 0,         //歌手数量\r\n            songListCount: 0,        //歌单数量\r\n            consumer: [],            //所有用户\r\n            songList: [],           //歌单数据\r\n            singer: [],             //歌手数据\r\n            // otherCountrySingers: 1,  //其他国家歌手数\r\n            consumerSex:{           //按性别分类的用户数\r\n                columns: ['性别','总数'],\r\n                rows: [\r\n                    {'性别': '男','总数': 0},\r\n                    {'性别': '女','总数': 0}\r\n                ]\r\n            },\r\n            options: {\r\n                color: ['#87cefa','#ffc0cb']\r\n            },\r\n            options1: {\r\n                color: ['yellow']\r\n            },\r\n            songStyle:{           //按歌单风格分类\r\n                columns: ['风格','总数'],\r\n                rows: [\r\n                    {'风格': '华语','总数': 0},\r\n                    {'风格': '粤语','总数': 0},\r\n                    {'风格': '欧美','总数': 0},\r\n                    {'风格': '日韩','总数': 0},\r\n                    {'风格': '摇滚','总数': 0},\r\n                    {'风格': '民谣','总数': 0},\r\n                    {'风格': '流行','总数': 0},\r\n                    {'风格': '其他','总数': 0}\r\n                ]\r\n            },\r\n            singerSex:{           //按性别分类的歌手数\r\n                columns: ['性别','总数'],\r\n                rows: [                    \r\n                    {'性别': '女','总数': 0},\r\n                    {'性别': '男','总数': 0},\r\n                    {'性别': '组合','总数': 0},\r\n                    {'性别': '不明','总数': 0}\r\n                ]\r\n            },\r\n            country:{\r\n                columns: ['国籍','总数'],\r\n                rows: [\r\n                    {'国籍': '中国','总数': 0},\r\n                    {'国籍': '韩国','总数': 0},\r\n                    {'国籍': '日本','总数': 0},\r\n                    {'国籍': '美国','总数': 0},\r\n                    {'国籍': '英国','总数': 0},\r\n                    {'国籍': '法国','总数': 0},\r\n                    // {'国籍': '其他','总数': 0}                    \r\n                ]\r\n            },\r\n        }\r\n    },\r\n    created() {\r\n       this.getSinger();\r\n\r\n    },\r\n    mounted() {\r\n        this.getConsumer();\r\n        this.getSong();\r\n        this.getSongList();\r\n    },\r\n    methods: {\r\n        getConsumer() {              //用户总数\r\n            getAllConsumerNoParams().then(res => {\r\n                this.consumer = res.data\r\n                this.consumerCount = res.total\r\n                this.consumerSex.rows[0]['总数'] = this.setSex(1,this.consumer);\r\n                this.consumerSex.rows[1]['总数'] = this.setSex(0,this.consumer);\r\n            })\r\n        },  \r\n        setSex(sex,val) {              //根据性别获取用户数\r\n            let count = 0;\r\n            for(let item of val){\r\n                if(sex == item.sex){\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        },\r\n        getSong() {                      //歌曲总数\r\n            alltAllSongNoParams().then(res => {\r\n                this.songCount = res.total;\r\n            })\r\n        },\r\n        getSinger() {                      //歌手数量\r\n            allSinger().then(res => {\r\n                this.singer = res.data\r\n                this.singerCount = res.total;\r\n                this.singerSex.rows[0]['总数'] = this.setSex(0,this.singer);\r\n                this.singerSex.rows[1]['总数'] = this.setSex(1,this.singer);\r\n                this.singerSex.rows[2]['总数'] = this.setSex(2,this.singer);\r\n                this.singerSex.rows[3]['总数'] = this.setSex(3,this.singer);\r\n               \r\n                this.getByCountry(res.data);\r\n                              \r\n            })\r\n        },\r\n\r\n        getSongList() {                    //歌单数量\r\n            getAllSongList().then(res => {\r\n                this.songListCount = res.total;\r\n                this.songList = res.data;\r\n                for(let item of this.songList){\r\n                    this.getByStyle(item.style);\r\n                }\r\n            })\r\n        },  \r\n        getByStyle(style) {              //根据歌单风格获取数量\r\n            // var styleList = style.split(',')\r\n            for(let item of this.songStyle.rows){\r\n                if(style.includes(item['风格'])){\r\n                    item['总数']++;\r\n                }\r\n                if(style.includes(item['其他'])){\r\n                    item['总数']++;\r\n                }\r\n            }\r\n        },\r\n        getByCountry(data) {              //根据国籍获取数量\r\n                let a=0\r\n                data.map(it=>{\r\n                   this.country.rows.map(itt=>{\r\n                        if(it.location.includes(itt['国籍'])){\r\n                            itt['总数']++\r\n                        }else{\r\n                          \r\n                        }\r\n                    })\r\n                })\r\n                var array=this.country.rows.map(it=>{\r\n                    return it['总数']\r\n                })\r\n                console.log(array)\r\n                var sum = array.reduce(function(pre, cur, index, array) {\r\n                    return pre+cur;\r\n                });\r\n                a=data.length-sum\r\n                this.country.rows.push( {'国籍': '其他','总数': a},)\r\n               \r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.grid-content {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 50px;\r\n}\r\n\r\n.grid-cont-center {\r\n    flex: 1;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    color: darkgray;\r\n}\r\n\r\n.grid-num {\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/InfoPage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{staticClass:\"mgb20\",staticStyle:{\"margin-top\":\"15px\"},attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.consumerCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"用户总数\")])])])])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.songCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"歌曲总数\")])])])])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.singerCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"歌手数量\")])])])])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.songListCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"歌单数量\")])])])])],1)],1),_vm._v(\" \"),_c('el-row',{staticClass:\"mgb20\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"用户性别比例\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-pie',{attrs:{\"data\":_vm.consumerSex,\"theme\":_vm.options}})],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"歌曲类型分布\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-histogram',{attrs:{\"data\":_vm.songStyle}})],1)])],1),_vm._v(\" \"),_c('el-row',{staticClass:\"mgb20\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"歌手性别比例\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-pie',{attrs:{\"data\":_vm.singerSex}})],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"歌手国籍分布\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-histogram',{attrs:{\"data\":_vm.country,\"theme\":_vm.options1}})],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-22b513e5\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/InfoPage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-22b513e5\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./InfoPage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InfoPage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InfoPage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-22b513e5\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./InfoPage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-22b513e5\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/InfoPage.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}