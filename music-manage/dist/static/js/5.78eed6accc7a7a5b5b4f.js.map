{"version":3,"sources":["webpack:///src/pages/ListSongPage.vue","webpack:///./src/pages/ListSongPage.vue?df20","webpack:///./src/pages/ListSongPage.vue"],"names":["ListSongPage","mixins","data","centerDialogVisible","delVisible","registerForm","singerName","songName","tableData","tempData","select_word","idx","multipleSelection","songListId","songListTitle","songTable","allSingerTable","listSong","watch","this","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","item","value","includes","push","err","return","created","$route","query","id","title","getData","getAllSinger","methods","_this","Object","api","then","res","i","_this2","singerChange","it","getSongNameBySingerId","singerId","_this3","length","addSong","_this4","songId","listSong1","songIds","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_i","$refs","registerFormNode","resetFields","notify","code","message","catch","console","log","deleteRow","_this5","pages_ListSongPage","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","font-size","padding-top","_v","_s","attrs","size","placeholder","model","callback","$$v","expression","type","on","click","delBatch","$event","ref","width","border","height","selection-change","handleSelectionChange","prop","label","align","scopedSlots","_u","key","fn","scope","handleDelete","row","visible","center","update:visible","action","label-width","remote","reserve-keyword","filterable","change","$set","_l","name","slot","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/5.78eed6accc7a7a5b5b4f.js","sourcesContent":["<template>\r\n    <div class=\"table\">\r\n        <div class=\"crumbs\">\r\n            <i class=\"el-icon-tickets\" style=\"font-size: 18px; padding-top: 18px\">{{this.songListTitle}}-音乐列表</i>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"handle-box\">\r\n                搜索当前歌单：\r\n                <el-input v-model=\"select_word\" size=\"mini\" placeholder=\"请输入歌手或歌曲名\" class=\"handle-input\"></el-input>\r\n                <br>\r\n                <br>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"getData\">搜索</el-button>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"delBatch\">批量删除</el-button>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"centerDialogVisible = true\">添加歌曲</el-button>\r\n            </div>\r\n        </div>\r\n        <el-table size=\"mini\" ref=\"multipleTable\" border style=\"width:100%\" height=\"680px\" :data=\"tableData\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"40\"></el-table-column>                       \r\n            <el-table-column prop=\"singerName\" label=\"歌手\" align=\"center\"></el-table-column>            \r\n            <el-table-column prop=\"songName\" label=\"歌名\" align=\"center\"></el-table-column> \r\n            <el-table-column prop=\"songAlbum\" label=\"所属专辑\" align=\"center\"></el-table-column>           \r\n            <el-table-column label=\"操作\" width=\"150\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.songId)\">删除</el-button> \r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <el-dialog title=\"添加歌曲\" :visible.sync=\"centerDialogVisible\" width=\"400px\" center>\r\n            <el-form :model=\"registerForm\" ref=\"registerFormNode\" action=\"\" id=\"tf\" label-width=\"70px\">\r\n                <el-form-item prop=\"singerName\"  size=\"mini\" label=\"歌手名:\">\r\n                    <el-select  v-model=\"registerForm.singerName\" placeholder=\"请输入歌手名\" \r\n                    :remote=\"true\"\r\n                    style=\"width: 100%;\"\r\n                    reserve-keyword\r\n                    @change=\"singerChange\"\r\n                    :filterable=\"true\">\r\n                    <el-option v-for=\"item in allSingerTable\" \r\n                        :key=\"item.id\"\r\n                        :label=\"item.name\"\r\n                        :value=\"item.id\">\r\n                    </el-option>\r\n                    </el-select>\r\n                </el-form-item>        \r\n                <el-form-item prop=\"songName\"  size=\"mini\" label=\"歌曲名:\">\r\n                    <el-select\r\n                    v-model=\"registerForm.songName\" placeholder=\"请输入歌曲名\"\r\n                    :remote=\"true\"\r\n                    style=\"width: 100%;\"\r\n                    reserve-keyword\r\n                    :filterable=\"true\">\r\n                    <el-option v-for=\"item in songTable\" \r\n                        :key=\"item.id\"\r\n                        :label=\"item.name\"\r\n                        :value=\"item.id\">\r\n                    </el-option>\r\n                    </el-select>\r\n                </el-form-item> \r\n               \r\n            </el-form>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"centerDialogVisible = false\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"addSong()\">确定</el-button>                \r\n            </span>\r\n        </el-dialog>\r\n        <el-dialog title=\"删除歌曲\" :visible.sync=\"delVisible\" width=\"300px\" center>\r\n            <div align=\"center\">删除歌手同时会将该歌手所有歌曲删除，确定删除？</div>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"delVisible = false\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"deleteRow\">确定</el-button>                \r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixin } from '../mixins/index';\r\nimport {\r\n    listSongDetail,\r\n    listSongAdd,\r\n    delListSong,\r\n    allSinger,\r\n    allSong\r\n    } from '../api/index';\r\n\r\nexport default {\r\n    mixins: [mixin],\r\n    data(){\r\n        return{\r\n            centerDialogVisible: false, //添加弹窗是否显示\r\n            delVisible: false,          //删除弹窗是否显示\r\n            registerForm:{      //添加框\r\n                singerName: '',     //歌手名字\r\n                songName: ''        //歌曲名字\r\n            },\r\n            tableData: [],\r\n            tempData: [],\r\n            select_word: '',\r\n            idx: -1,          //当前选择项\r\n            multipleSelection: [],   //哪些项已经打勾\r\n            songListId: '',          //歌单id\r\n            songListTitle: '',  //歌单标题\r\n            songTable: [],   //根据歌手查出的歌名\r\n            allSingerTable: [],   //所有歌手\r\n            listSong: {}, //歌单中的歌曲对象\r\n            }\r\n    },\r\n    watch:{ //监听搜索框\r\n        //搜索框里面的内容发生变化的时候，搜索结果table列表的内容跟着它的内容发生变化\r\n        select_word: function(){\r\n            if(this.select_word == ''){\r\n                this.tableData = this.tempData;\r\n            }else{\r\n                this.tableData = [];\r\n                for(let item of this.tempData){\r\n                    if(item.songName.includes(this.select_word) || item.singerName.includes(this.select_word)){\r\n                        this.tableData.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    created(){\r\n        this.songListId = this.$route.query.id;\r\n        this.songListTitle = this.$route.query.title;\r\n        this.getData();     \r\n        this.getAllSinger();   \r\n    },\r\n    methods:{\r\n        //查询歌单歌曲\r\n        getData(){\r\n            this.tempData = [];\r\n            this.tableData = [];\r\n            listSongDetail(this.songListId).then(res => {\r\n                for(let i in res.data){\r\n                    this.tempData.push(res.data[i]);\r\n                    this.tableData.push(res.data[i]);\r\n                }\r\n            })\r\n        },\r\n        \r\n        //查询所有歌手\r\n        getAllSinger() {  \r\n            this.allSingerTable = [];\r\n            allSinger().then(res => {\r\n                for(let i in res.data){\r\n                    this.allSingerTable.push(res.data[i]);\r\n                }\r\n            })\r\n        },\r\n        singerChange(it){\r\n            this.getSongNameBySingerId(it);\r\n        },\r\n        getSongNameBySingerId(singerId){\r\n            this.songTable = [];\r\n            allSong(singerId).then(res => {\r\n                for(let i in res.data){\r\n                    this.songTable.push(res.data[i]);\r\n                }\r\n                if(this.songTable.length == 0){\r\n                    this.songTable.push(\"\")\r\n                }\r\n            })\r\n            \r\n        },\r\n        \r\n        //添加歌曲\r\n        addSong(){\r\n            this.listSong.songId = this.registerForm.songName\r\n            this.listSong.songListId = this.songListId\r\n            var listSong1 = this.listSong\r\n            //判存在，将tableData中的songId添加到数组\r\n            var songIds = [];\r\n            for(let i of this.tableData){\r\n                songIds.push(i.songId)\r\n            }\r\n            for(let i=0; i<songIds.length; i++){\r\n                if(songIds.includes(listSong1.songId)){\r\n                    this.$refs.registerFormNode.resetFields()\r\n                    this.centerDialogVisible = false\r\n                    return this.notify(\"该歌曲已存在\", \"error\");\r\n                }\r\n            }\r\n            listSongAdd(listSong1)\r\n            .then(res => {\r\n                if(res.code == 1){\r\n                    this.getData();\r\n                    this.notify(res.message,\"success\");\r\n                }else{\r\n                    this.notify(res.message,\"error\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n            this.$refs.registerFormNode.resetFields()\r\n            this.centerDialogVisible = false;\r\n        },\r\n        //删除一条歌曲\r\n        deleteRow(){\r\n            delListSong(this.songListId, this.idx)\r\n            .then(res => {\r\n                if(res){\r\n                    this.getData();\r\n                    this.notify(res.message,\"success\");\r\n                }else{\r\n                    this.notify(res.message,\"error\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n            this.delVisible = false;\r\n        }\r\n    }   \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .handle-box{\r\n        margin-bottom: 20px;\r\n    }\r\n    .song-img{\r\n        width: 100%;\r\n        height: 80px;\r\n        border-radius: 5px;\r\n        margin-bottom: 5px;\r\n        overflow: hidden;\r\n    }\r\n    .handle-input{\r\n        width: 300px;\r\n        display: inline-block;\r\n    }\r\n    .pagination{\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    .play {\r\n        position: absolute;\r\n        z-index: 100;\r\n        width: 80px;\r\n        height: 80px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        top: 18px;\r\n        left: 15px;\r\n    }\r\n\r\n    .icon {\r\n        width: 2em;\r\n        height: 2em;\r\n        color: white;\r\n        fill: currentColor;\r\n        overflow: hidden;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/ListSongPage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"table\"},[_c('div',{staticClass:\"crumbs\"},[_c('i',{staticClass:\"el-icon-tickets\",staticStyle:{\"font-size\":\"18px\",\"padding-top\":\"18px\"}},[_vm._v(_vm._s(this.songListTitle)+\"-音乐列表\")])]),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"handle-box\"},[_vm._v(\"\\n            搜索当前歌单：\\n            \"),_c('el-input',{staticClass:\"handle-input\",attrs:{\"size\":\"mini\",\"placeholder\":\"请输入歌手或歌曲名\"},model:{value:(_vm.select_word),callback:function ($$v) {_vm.select_word=$$v},expression:\"select_word\"}}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.getData}},[_vm._v(\"搜索\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.delBatch}},[_vm._v(\"批量删除\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.centerDialogVisible = true}}},[_vm._v(\"添加歌曲\")])],1)]),_vm._v(\" \"),_c('el-table',{ref:\"multipleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"size\":\"mini\",\"border\":\"\",\"height\":\"680px\",\"data\":_vm.tableData},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"singerName\",\"label\":\"歌手\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"songName\",\"label\":\"歌名\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"songAlbum\",\"label\":\"所属专辑\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"150\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleDelete(scope.row.songId)}}},[_vm._v(\"删除\")])]}}])})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加歌曲\",\"visible\":_vm.centerDialogVisible,\"width\":\"400px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.centerDialogVisible=$event}}},[_c('el-form',{ref:\"registerFormNode\",attrs:{\"model\":_vm.registerForm,\"action\":\"\",\"id\":\"tf\",\"label-width\":\"70px\"}},[_c('el-form-item',{attrs:{\"prop\":\"singerName\",\"size\":\"mini\",\"label\":\"歌手名:\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请输入歌手名\",\"remote\":true,\"reserve-keyword\":\"\",\"filterable\":true},on:{\"change\":_vm.singerChange},model:{value:(_vm.registerForm.singerName),callback:function ($$v) {_vm.$set(_vm.registerForm, \"singerName\", $$v)},expression:\"registerForm.singerName\"}},_vm._l((_vm.allSingerTable),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"songName\",\"size\":\"mini\",\"label\":\"歌曲名:\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请输入歌曲名\",\"remote\":true,\"reserve-keyword\":\"\",\"filterable\":true},model:{value:(_vm.registerForm.songName),callback:function ($$v) {_vm.$set(_vm.registerForm, \"songName\", $$v)},expression:\"registerForm.songName\"}},_vm._l((_vm.songTable),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1)],1),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.centerDialogVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.addSong()}}},[_vm._v(\"确定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"删除歌曲\",\"visible\":_vm.delVisible,\"width\":\"300px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.delVisible=$event}}},[_c('div',{attrs:{\"align\":\"center\"}},[_vm._v(\"删除歌手同时会将该歌手所有歌曲删除，确定删除？\")]),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.delVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.deleteRow}},[_vm._v(\"确定\")])],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-c022d350\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/ListSongPage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c022d350\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ListSongPage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ListSongPage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ListSongPage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c022d350\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ListSongPage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c022d350\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/ListSongPage.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}